(self.webpackChunk_wcpos_react_native_jsonschema_form=self.webpackChunk_wcpos_react_native_jsonschema_form||[]).push([[494],{"./src/form.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Widgets=exports.Single=exports.Ordering=exports.Numbers=exports.Nested=exports.FormContext=exports.Errors=exports.ErrorSchema=exports.CountriesWithStates=exports.Collapsible=exports.BasicUsage=exports.Arrays=void 0;var _BasicUsage$parameter,_BasicUsage$parameter2,_BasicUsage$parameter3,_Nested$parameters,_Nested$parameters2,_Nested$parameters2$d,_Arrays$parameters,_Arrays$parameters2,_Arrays$parameters2$d,_Numbers$parameters,_Numbers$parameters2,_Numbers$parameters2$,_Widgets$parameters,_Widgets$parameters2,_Widgets$parameters2$,_Ordering$parameters,_Ordering$parameters2,_Ordering$parameters3,_Errors$parameters,_Errors$parameters2,_Errors$parameters2$d,_ErrorSchema$paramete,_ErrorSchema$paramete2,_ErrorSchema$paramete3,_Single$parameters,_Single$parameters2,_Single$parameters2$d,_Collapsible$paramete,_Collapsible$paramete2,_Collapsible$paramete3,_FormContext$paramete,_FormContext$paramete2,_FormContext$paramete3,_CountriesWithStates$,_CountriesWithStates$2,_CountriesWithStates$3,_slicedToArray2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/slicedToArray.js")),React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_cloneDeep=_interopRequireDefault(__webpack_require__("./node_modules/lodash/cloneDeep.js")),_delay=_interopRequireDefault(__webpack_require__("./node_modules/lodash/delay.js")),_find2=_interopRequireDefault(__webpack_require__("./node_modules/lodash/find.js")),_map=_interopRequireDefault(__webpack_require__("./node_modules/lodash/map.js")),_set=_interopRequireDefault(__webpack_require__("./node_modules/lodash/set.js")),_portal=_interopRequireDefault(__webpack_require__("./node_modules/@wcpos/components/src/portal/index.ts")),_countries=_interopRequireDefault(__webpack_require__("./src/countries.json")),_form=__webpack_require__("./src/form.tsx"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}exports.default={title:"Components/Form",component:_form.Form,decorators:[function AppProvider(Story,context){return(0,_jsxRuntime.jsxs)(_portal.default.Provider,{children:[(0,_jsxRuntime.jsx)(Story,Object.assign({},context)),(0,_jsxRuntime.jsx)(_portal.default.Manager,{})]})}]};var BasicUsage=exports.BasicUsage=function BasicUsage(props){var _React$useState=React.useState({firstName:"Chuck",lastName:"Norris",age:75,bio:"Roundhouse kicking asses since 1940",password:"noneed"}),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),data=_React$useState2[0],setData=_React$useState2[1],handleChange=React.useCallback((function(change,name){(0,_addonActions.action)("onChange")(change),setData(change)}),[]);return(0,_jsxRuntime.jsx)(_form.Form,Object.assign({},props,{formData:data,onChange:handleChange}))};BasicUsage.args={schema:{title:"A registration form",description:"A simple form example.",type:"object",required:["firstName","lastName"],properties:{firstName:{type:"string",title:"First name",default:"Chuck"},lastName:{type:"string",title:"Last name"},telephone:{type:"string",title:"Telephone",minLength:10}}},uiSchema:{firstName:{"ui:autofocus":!0,"ui:emptyValue":"","ui:autocomplete":"family-name"},lastName:{"ui:emptyValue":"","ui:autocomplete":"given-name"},telephone:{"ui:options":{inputType:"tel"}}}};var Nested=exports.Nested=function Nested(props){var _React$useState3=React.useState({title:"My current tasks",tasks:[{title:"My first task",details:"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",done:!0},{title:"My second task",details:"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur",done:!1}]}),_React$useState4=(0,_slicedToArray2.default)(_React$useState3,2),data=_React$useState4[0],setData=_React$useState4[1],handleChange=React.useCallback((function(change){(0,_addonActions.action)("onChange")(change),setData(change)}),[]);return(0,_jsxRuntime.jsx)(_form.Form,Object.assign({},props,{formData:data,onChange:handleChange}))};Nested.args={schema:{title:"A list of tasks",type:"object",required:["title"],properties:{title:{type:"string",title:"Task list title"},tasks:{type:"array",title:"Tasks",items:{type:"object",required:["title"],properties:{title:{type:"string",title:"Title",description:"A sample title"},details:{type:"string",title:"Task details",description:"Enter the task details"},done:{type:"boolean",title:"Done?",default:!1}}}}}},uiSchema:{tasks:{items:{details:{"ui:widget":"textarea"}}}}};var Arrays=exports.Arrays=function Arrays(props){var _React$useState5=React.useState({listOfStrings:["foo","bar"],multipleChoicesList:["foo","bar"],fixedItemsList:["Some text",!0,123],minItemsList:[{name:"Default name"},{name:"Default name"},{name:"Default name"}],defaultsAndMinItems:["carp","trout","bream","unidentified","unidentified"],nestedList:[["lorem","ipsum"],["dolor"]],unorderable:["one","two"],unremovable:["one","two"],noToolbar:["one","two"],fixedNoToolbar:[42,!0,"additional item one","additional item two"]}),_React$useState6=(0,_slicedToArray2.default)(_React$useState5,2),data=_React$useState6[0],setData=_React$useState6[1],handleChange=React.useCallback((function(change){(0,_addonActions.action)("onChange")(change),setData(change)}),[]);return(0,_jsxRuntime.jsx)(_form.Form,Object.assign({},props,{formData:data,onChange:handleChange}))};Arrays.args={schema:{definitions:{Thing:{type:"object",properties:{name:{type:"string",default:"Default name"}}}},type:"object",properties:{listOfStrings:{type:"array",title:"A list of strings",items:{type:"string",default:"bazinga"}},multipleChoicesList:{type:"array",title:"A multiple choices list",items:{type:"string",enum:["foo","bar","fuzz","qux"]},uniqueItems:!0},fixedItemsList:{type:"array",title:"A list of fixed items",items:[{title:"A string value",type:"string",default:"lorem ipsum"},{title:"a boolean value",type:"boolean"}],additionalItems:{title:"Additional item",type:"number"}},minItemsList:{type:"array",title:"A list with a minimal number of items",minItems:3,items:{$ref:"#/definitions/Thing"}},defaultsAndMinItems:{type:"array",title:"List and item level defaults",minItems:5,default:["carp","trout","bream"],items:{type:"string",default:"unidentified"}},nestedList:{type:"array",title:"Nested list",items:{type:"array",title:"Inner list",items:{type:"string",default:"lorem ipsum"}}},unorderable:{title:"Unorderable items",type:"array",items:{type:"string",default:"lorem ipsum"}},unremovable:{title:"Unremovable items",type:"array",items:{type:"string",default:"lorem ipsum"}},noToolbar:{title:"No add, remove and order buttons",type:"array",items:{type:"string",default:"lorem ipsum"}},fixedNoToolbar:{title:"Fixed array without buttons",type:"array",items:[{title:"A number",type:"number",default:42},{title:"A boolean",type:"boolean",default:!1}],additionalItems:{title:"A string",type:"string",default:"lorem ipsum"}}}},uiSchema:{listOfStrings:{items:{"ui:emptyValue":""}},fixedItemsList:{items:[{"ui:widget":"textarea"},{"ui:widget":"select"}]},unorderable:{"ui:options":{orderable:!1}},unremovable:{"ui:options":{removable:!1}},noToolbar:{"ui:options":{addable:!1,orderable:!1,removable:!1}},fixedNoToolbar:{"ui:options":{addable:!1,orderable:!1,removable:!1}}}};var Numbers=exports.Numbers=function Numbers(props){var _React$useState7=React.useState({number:3.14,integer:42,numberEnum:2,integerRange:42,integerRangeSteps:80}),_React$useState8=(0,_slicedToArray2.default)(_React$useState7,2),data=_React$useState8[0],setData=_React$useState8[1],handleChange=React.useCallback((function(change){(0,_addonActions.action)("onChange")(change),setData(change)}),[]);return(0,_jsxRuntime.jsx)(_form.Form,Object.assign({},props,{formData:data,onChange:handleChange}))};Numbers.args={schema:{type:"object",title:"Number fields & widgets",properties:{number:{title:"Number",type:"number"},integer:{title:"Integer",type:"integer"},numberEnum:{type:"number",title:"Number enum",enum:[1,2,3]},numberEnumRadio:{type:"number",title:"Number enum",enum:[1,2,3]},integerRange:{title:"Integer range",type:"integer",minimum:42,maximum:100},integerRangeSteps:{title:"Integer range (by 10)",type:"integer",minimum:50,maximum:100,multipleOf:10}}},uiSchema:{numberEnumRadio:{"ui:widget":"radio","ui:options":{inline:!0}},integerRange:{"ui:widget":"range"},integerRangeSteps:{"ui:widget":"range"}}};var Widgets=exports.Widgets=function Widgets(props){var _React$useState9=React.useState({stringFormats:{email:"chuck@norris.net",uri:"http://chucknorris.com/"},boolean:{default:!0,radio:!0,select:!0},string:{color:"#151ce6",default:"Hello...",textarea:"... World"},secret:"I'm a hidden string.",disabled:"I am disabled.",readonly:"I am read-only.",readonly2:"I am also read-only.",widgetOptions:"I am yellow"}),_React$useState10=(0,_slicedToArray2.default)(_React$useState9,2),data=_React$useState10[0],setData=_React$useState10[1],handleChange=React.useCallback((function(change){(0,_addonActions.action)("onChange")(change),setData(change)}),[]);return(0,_jsxRuntime.jsx)(_form.Form,Object.assign({},props,{formData:data,onChange:handleChange}))};Widgets.args={schema:{title:"Widgets",type:"object",properties:{stringFormats:{type:"object",title:"String formats",properties:{email:{type:"string",format:"email"},uri:{type:"string",format:"uri"}}},boolean:{type:"object",title:"Boolean field",properties:{default:{type:"boolean",title:"checkbox (default)",description:"This is the checkbox-description"},radio:{type:"boolean",title:"radio buttons",description:"This is the radio-description"},select:{type:"boolean",title:"select box",description:"This is the select-description"}}},string:{type:"object",title:"String field",properties:{default:{type:"string",title:"text input (default)"},textarea:{type:"string",title:"textarea"},placeholder:{type:"string"},color:{type:"string",title:"color picker",default:"#151ce6"}}},secret:{type:"string",default:"I'm a hidden string."},disabled:{type:"string",title:"A disabled field",default:"I am disabled."},readonly:{type:"string",title:"A readonly field",default:"I am read-only."},readonly2:{type:"string",title:"Another readonly field",default:"I am also read-only.",readOnly:!0},widgetOptions:{title:"Custom widget with options",type:"string",default:"I am yellow"},selectWidgetOptions:{title:"Custom select widget with options",type:"string",enum:["foo","bar"],enumNames:["Foo","Bar"]}}},uiSchema:{boolean:{radio:{"ui:widget":"radio"},select:{"ui:widget":"select"}},string:{placeholder:{"ui:placeholder":"This is a placeholder"}},disabled:{"ui:disabled":!0},readonly:{"ui:readonly":!0},widgetOptions:{"ui:options":{backgroundColor:"yellow"}},selectWidgetOptions:{"ui:options":{backgroundColor:"pink"}}}};var Ordering=exports.Ordering=function Ordering(props){var _React$useState11=React.useState({firstName:"Chuck",lastName:"Norris",age:75,bio:"Roundhouse kicking asses since 1940",password:"noneed"}),_React$useState12=(0,_slicedToArray2.default)(_React$useState11,2),data=_React$useState12[0],setData=_React$useState12[1],handleChange=React.useCallback((function(change){(0,_addonActions.action)("onChange")(change),setData(change)}),[]);return(0,_jsxRuntime.jsx)(_form.Form,Object.assign({},props,{formData:data,onChange:handleChange}))};Ordering.args={schema:{title:"A registration form",type:"object",required:["firstName","lastName"],properties:{password:{type:"string",title:"Password"},lastName:{type:"string",title:"Last name"},bio:{type:"string",title:"Bio"},firstName:{type:"string",title:"First name"},age:{type:"integer",title:"Age"}}},uiSchema:{"ui:order":["firstName","lastName","*","password"],age:{},bio:{"ui:widget":"textarea"},password:{}}};var Errors=exports.Errors=function Errors(props){var _React$useState13=React.useState({firstName:"Chuck",active:"wrong",skills:["karate","budo","aikido"],multipleChoicesList:["foo","bar","fuzz"]}),_React$useState14=(0,_slicedToArray2.default)(_React$useState13,2),data=_React$useState14[0],setData=_React$useState14[1],handleChange=React.useCallback((function(change){(0,_addonActions.action)("onChange")(change),setData((function(prev){return Object.assign({},prev,change)}))}),[]);return(0,_jsxRuntime.jsx)(_form.Form,Object.assign({},props,{formData:data,onChange:handleChange}))};Errors.args={schema:{title:"Contextualized errors",type:"object",properties:{firstName:{type:"string",title:"First name",minLength:8,pattern:"\\d+"},active:{type:"boolean",title:"Active"},skills:{type:"array",items:{type:"string",minLength:5}},multipleChoicesList:{type:"array",title:"Pick max two items",uniqueItems:!0,maxItems:2,items:{type:"string",enum:["foo","bar","fuzz"]}}}},uiSchema:{}};var ErrorSchema=exports.ErrorSchema=function ErrorSchema(props){var _React$useState15=React.useState({firstName:"Chuck",lastName:"Norris",age:75,bio:"Roundhouse kicking asses since 1940",password:"noneed"}),_React$useState16=(0,_slicedToArray2.default)(_React$useState15,2),data=_React$useState16[0],setData=_React$useState16[1],handleChange=React.useCallback((function(change){(0,_addonActions.action)("onChange")(change),setData(change)}),[]);return(0,_jsxRuntime.jsx)(_form.Form,Object.assign({},props,{formData:data,onChange:handleChange}))};ErrorSchema.args={schema:{title:"A registration form",description:"A simple form example.",type:"object",required:["firstName","lastName"],properties:{firstName:{type:"string",title:"First name",default:"Chuck"},lastName:{type:"string",title:"Last name"},age:{type:"integer",title:"Age"},bio:{type:"string",title:"Bio"},password:{type:"string",title:"Password",minLength:3},telephone:{type:"string",title:"Telephone",minLength:10}}},uiSchema:{firstName:{"ui:autofocus":!0,"ui:emptyValue":""},age:{"ui:title":"Age of person","ui:description":"(earthian year)"},bio:{"ui:widget":"textarea"},password:{"ui:help":"Hint: Make it strong!"},date:{},telephone:{"ui:options":{inputType:"tel"}}},extraErrors:{firstName:{__errors:["some error that got added as a prop"]}}};var Single=exports.Single=function Single(props){var _React$useState17=React.useState("initial value"),_React$useState18=(0,_slicedToArray2.default)(_React$useState17,2),data=_React$useState18[0],setData=_React$useState18[1],handleChange=React.useCallback((function(change){(0,_addonActions.action)("onChange")(change),setData(change)}),[]);return(0,_jsxRuntime.jsx)(_form.Form,Object.assign({},props,{formData:data,onChange:handleChange}))};Single.args={schema:{title:"A single-field form",type:"string"}};var Collapsible=exports.Collapsible=function Collapsible(props){var _React$useState19=React.useState({firstName:"Chuck",lastName:"Norris"}),_React$useState20=(0,_slicedToArray2.default)(_React$useState19,2),data=_React$useState20[0],setData=_React$useState20[1],handleChange=React.useCallback((function(change){(0,_addonActions.action)("onChange")(change),setData(change)}),[]);return(0,_jsxRuntime.jsx)(_form.Form,Object.assign({},props,{formData:data,onChange:handleChange}))};Collapsible.args={schema:{title:"A registration form",type:"object",required:["firstName","lastName"],properties:{firstName:{type:"string",title:"First name"},lastName:{type:"string",title:"Last name"},shipping:{type:"object",title:"Shipping Address",properties:{firstName:{type:"string",title:"First name"},lastName:{type:"string",title:"Last name"},address_1:{type:"string"},address_2:{type:"string"},city:{type:"string"},state:{type:"string"},postcode:{type:"string"},country:{type:"string"}}}}},uiSchema:{shipping:{"ui:collapsible":"closed"}}};var FormContext=exports.FormContext=function FormContext(props){var _React$useState21=React.useState({stringFormats:{email:"chuck@norris.net",uri:"http://chucknorris.com/"},boolean:{default:!0,radio:!0,select:!0},string:{color:"#151ce6",default:"Hello...",textarea:"... World"}}),_React$useState22=(0,_slicedToArray2.default)(_React$useState21,2),data=_React$useState22[0],setData=_React$useState22[1],handleChange=React.useCallback((function(change){(0,_addonActions.action)("onChange")(change),setData(change)}),[]);return(0,_jsxRuntime.jsx)(_form.Form,Object.assign({},props,{formData:data,onChange:handleChange,formContext:{label:function label(id,_label,data){return(0,_addonActions.action)("label")({id,label:_label,data}),id}}}))};FormContext.args={schema:{title:"Label and Title context",type:"object",properties:{stringFormats:{type:"object",title:"String formats",properties:{email:{type:"string",format:"email"},uri:{type:"string",format:"uri"}}},boolean:{type:"object",title:"Boolean field",properties:{default:{type:"boolean",title:"checkbox (default)",description:"This is the checkbox-description"},radio:{type:"boolean",title:"radio buttons",description:"This is the radio-description"},select:{type:"boolean",title:"select box",description:"This is the select-description"}}},string:{type:"object",title:"String field",properties:{default:{type:"string",title:"text input (default)"},textarea:{type:"string",title:"textarea"},placeholder:{type:"string"},color:{type:"string",title:"color picker",default:"#151ce6"}}}}},uiSchema:{}};var CountriesWithStates=exports.CountriesWithStates=function CountriesWithStates(props){var _React$useState23=React.useState({}),_React$useState24=(0,_slicedToArray2.default)(_React$useState23,2),data=_React$useState24[0],setData=_React$useState24[1],_React$useState25=React.useState({}),_React$useState26=(0,_slicedToArray2.default)(_React$useState25,2),countries=_React$useState26[0],setCountries=_React$useState26[1];React.useEffect((function(){(0,_delay.default)((function(){setCountries(_countries.default)}),1e3)}),[]);var schema=React.useMemo((function(){var newSchema=(0,_cloneDeep.default)(props.schema);if((0,_set.default)(newSchema,"properties.country.enum",(0,_map.default)(countries,"code")),(0,_set.default)(newSchema,"properties.country.enumNames",(0,_map.default)(countries,"name")),data.country){var states=(0,_find2.default)(countries,{code:data.country}).states;states&&states.length>0&&((0,_set.default)(newSchema,"properties.state.enum",(0,_map.default)(states,"code")),(0,_set.default)(newSchema,"properties.state.enumNames",(0,_map.default)(states,"name")))}return newSchema}),[props.schema,countries,data.country]),handleChange=React.useCallback((function(change){(0,_addonActions.action)("onChange")(change),setData(change)}),[]);return(0,_jsxRuntime.jsx)(_form.Form,Object.assign({},props,{schema,formData:data,onChange:handleChange}))};CountriesWithStates.args={schema:{title:"Demo for countries",type:"object",properties:{country:{type:"string",title:"Country",enum:["loading"]},state:{type:"string",title:"State"}}}},BasicUsage.parameters=Object.assign({},BasicUsage.parameters,{docs:Object.assign({},null==(_BasicUsage$parameter=BasicUsage.parameters)?void 0:_BasicUsage$parameter.docs,{source:Object.assign({originalSource:"(props: FormProps) => {\n  const [data, setData] = React.useState({\n    firstName: 'Chuck',\n    lastName: 'Norris',\n    age: 75,\n    bio: 'Roundhouse kicking asses since 1940',\n    password: 'noneed'\n  });\n  const handleChange = React.useCallback((change, name) => {\n    action('onChange')(change);\n    setData(change);\n  }, []);\n  return <Form<typeof data> {...props} formData={data} onChange={handleChange} />;\n}"},null==(_BasicUsage$parameter2=BasicUsage.parameters)||null==(_BasicUsage$parameter3=_BasicUsage$parameter2.docs)?void 0:_BasicUsage$parameter3.source)})}),Nested.parameters=Object.assign({},Nested.parameters,{docs:Object.assign({},null==(_Nested$parameters=Nested.parameters)?void 0:_Nested$parameters.docs,{source:Object.assign({originalSource:"(props: FormProps) => {\n  const [data, setData] = React.useState({\n    title: 'My current tasks',\n    tasks: [{\n      title: 'My first task',\n      details: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n      done: true\n    }, {\n      title: 'My second task',\n      details: 'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur',\n      done: false\n    }]\n  });\n  const handleChange = React.useCallback(change => {\n    action('onChange')(change);\n    setData(change);\n  }, []);\n  return <Form<typeof data> {...props} formData={data} onChange={handleChange} />;\n}"},null==(_Nested$parameters2=Nested.parameters)||null==(_Nested$parameters2$d=_Nested$parameters2.docs)?void 0:_Nested$parameters2$d.source)})}),Arrays.parameters=Object.assign({},Arrays.parameters,{docs:Object.assign({},null==(_Arrays$parameters=Arrays.parameters)?void 0:_Arrays$parameters.docs,{source:Object.assign({originalSource:"(props: FormProps) => {\n  const [data, setData] = React.useState({\n    listOfStrings: ['foo', 'bar'],\n    multipleChoicesList: ['foo', 'bar'],\n    fixedItemsList: ['Some text', true, 123],\n    minItemsList: [{\n      name: 'Default name'\n    }, {\n      name: 'Default name'\n    }, {\n      name: 'Default name'\n    }],\n    defaultsAndMinItems: ['carp', 'trout', 'bream', 'unidentified', 'unidentified'],\n    nestedList: [['lorem', 'ipsum'], ['dolor']],\n    unorderable: ['one', 'two'],\n    unremovable: ['one', 'two'],\n    noToolbar: ['one', 'two'],\n    fixedNoToolbar: [42, true, 'additional item one', 'additional item two']\n  });\n  const handleChange = React.useCallback(change => {\n    action('onChange')(change);\n    setData(change);\n  }, []);\n  return <Form<typeof data> {...props} formData={data} onChange={handleChange} />;\n}"},null==(_Arrays$parameters2=Arrays.parameters)||null==(_Arrays$parameters2$d=_Arrays$parameters2.docs)?void 0:_Arrays$parameters2$d.source)})}),Numbers.parameters=Object.assign({},Numbers.parameters,{docs:Object.assign({},null==(_Numbers$parameters=Numbers.parameters)?void 0:_Numbers$parameters.docs,{source:Object.assign({originalSource:"(props: FormProps) => {\n  const [data, setData] = React.useState({\n    number: 3.14,\n    integer: 42,\n    numberEnum: 2,\n    integerRange: 42,\n    integerRangeSteps: 80\n  });\n  const handleChange = React.useCallback(change => {\n    action('onChange')(change);\n    setData(change);\n  }, []);\n  return <Form<typeof data> {...props} formData={data} onChange={handleChange} />;\n}"},null==(_Numbers$parameters2=Numbers.parameters)||null==(_Numbers$parameters2$=_Numbers$parameters2.docs)?void 0:_Numbers$parameters2$.source)})}),Widgets.parameters=Object.assign({},Widgets.parameters,{docs:Object.assign({},null==(_Widgets$parameters=Widgets.parameters)?void 0:_Widgets$parameters.docs,{source:Object.assign({originalSource:"(props: FormProps) => {\n  const [data, setData] = React.useState({\n    stringFormats: {\n      email: 'chuck@norris.net',\n      uri: 'http://chucknorris.com/'\n    },\n    boolean: {\n      default: true,\n      radio: true,\n      select: true\n    },\n    string: {\n      color: '#151ce6',\n      default: 'Hello...',\n      textarea: '... World'\n    },\n    secret: \"I'm a hidden string.\",\n    disabled: 'I am disabled.',\n    readonly: 'I am read-only.',\n    readonly2: 'I am also read-only.',\n    widgetOptions: 'I am yellow'\n  });\n  const handleChange = React.useCallback(change => {\n    action('onChange')(change);\n    setData(change);\n  }, []);\n  return <Form<typeof data> {...props} formData={data} onChange={handleChange} />;\n}"},null==(_Widgets$parameters2=Widgets.parameters)||null==(_Widgets$parameters2$=_Widgets$parameters2.docs)?void 0:_Widgets$parameters2$.source)})}),Ordering.parameters=Object.assign({},Ordering.parameters,{docs:Object.assign({},null==(_Ordering$parameters=Ordering.parameters)?void 0:_Ordering$parameters.docs,{source:Object.assign({originalSource:"(props: FormProps) => {\n  const [data, setData] = React.useState({\n    firstName: 'Chuck',\n    lastName: 'Norris',\n    age: 75,\n    bio: 'Roundhouse kicking asses since 1940',\n    password: 'noneed'\n  });\n  const handleChange = React.useCallback(change => {\n    action('onChange')(change);\n    setData(change);\n  }, []);\n  return <Form<typeof data> {...props} formData={data} onChange={handleChange} />;\n}"},null==(_Ordering$parameters2=Ordering.parameters)||null==(_Ordering$parameters3=_Ordering$parameters2.docs)?void 0:_Ordering$parameters3.source)})}),Errors.parameters=Object.assign({},Errors.parameters,{docs:Object.assign({},null==(_Errors$parameters=Errors.parameters)?void 0:_Errors$parameters.docs,{source:Object.assign({originalSource:"(props: FormProps) => {\n  const [data, setData] = React.useState({\n    firstName: 'Chuck',\n    active: 'wrong',\n    skills: ['karate', 'budo', 'aikido'],\n    multipleChoicesList: ['foo', 'bar', 'fuzz']\n  });\n  const handleChange = React.useCallback(change => {\n    action('onChange')(change);\n    setData(prev => ({\n      ...prev,\n      ...change\n    }));\n  }, []);\n  return <Form<typeof data> {...props} formData={data} onChange={handleChange} />;\n}"},null==(_Errors$parameters2=Errors.parameters)||null==(_Errors$parameters2$d=_Errors$parameters2.docs)?void 0:_Errors$parameters2$d.source)})}),ErrorSchema.parameters=Object.assign({},ErrorSchema.parameters,{docs:Object.assign({},null==(_ErrorSchema$paramete=ErrorSchema.parameters)?void 0:_ErrorSchema$paramete.docs,{source:Object.assign({originalSource:"(props: FormProps) => {\n  const [data, setData] = React.useState({\n    firstName: 'Chuck',\n    lastName: 'Norris',\n    age: 75,\n    bio: 'Roundhouse kicking asses since 1940',\n    password: 'noneed'\n  });\n  const handleChange = React.useCallback(change => {\n    action('onChange')(change);\n    setData(change);\n  }, []);\n  return <Form<typeof data> {...props} formData={data} onChange={handleChange} />;\n}"},null==(_ErrorSchema$paramete2=ErrorSchema.parameters)||null==(_ErrorSchema$paramete3=_ErrorSchema$paramete2.docs)?void 0:_ErrorSchema$paramete3.source)})}),Single.parameters=Object.assign({},Single.parameters,{docs:Object.assign({},null==(_Single$parameters=Single.parameters)?void 0:_Single$parameters.docs,{source:Object.assign({originalSource:"(props: FormProps) => {\n  const [data, setData] = React.useState('initial value');\n  const handleChange = React.useCallback(change => {\n    action('onChange')(change);\n    setData(change);\n  }, []);\n  return <Form<typeof data> {...props} formData={data} onChange={handleChange} />;\n}"},null==(_Single$parameters2=Single.parameters)||null==(_Single$parameters2$d=_Single$parameters2.docs)?void 0:_Single$parameters2$d.source)})}),Collapsible.parameters=Object.assign({},Collapsible.parameters,{docs:Object.assign({},null==(_Collapsible$paramete=Collapsible.parameters)?void 0:_Collapsible$paramete.docs,{source:Object.assign({originalSource:"(props: FormProps) => {\n  const [data, setData] = React.useState({\n    firstName: 'Chuck',\n    lastName: 'Norris'\n  });\n  const handleChange = React.useCallback(change => {\n    action('onChange')(change);\n    setData(change);\n  }, []);\n  return <Form<typeof data> {...props} formData={data} onChange={handleChange} />;\n}"},null==(_Collapsible$paramete2=Collapsible.parameters)||null==(_Collapsible$paramete3=_Collapsible$paramete2.docs)?void 0:_Collapsible$paramete3.source)})}),FormContext.parameters=Object.assign({},FormContext.parameters,{docs:Object.assign({},null==(_FormContext$paramete=FormContext.parameters)?void 0:_FormContext$paramete.docs,{source:Object.assign({originalSource:"(props: FormProps) => {\n  const [data, setData] = React.useState({\n    stringFormats: {\n      email: 'chuck@norris.net',\n      uri: 'http://chucknorris.com/'\n    },\n    boolean: {\n      default: true,\n      radio: true,\n      select: true\n    },\n    string: {\n      color: '#151ce6',\n      default: 'Hello...',\n      textarea: '... World'\n    }\n  });\n  const handleChange = React.useCallback(change => {\n    action('onChange')(change);\n    setData(change);\n  }, []);\n  return <Form<typeof data> {...props} formData={data} onChange={handleChange} formContext={{\n    label: (id, label, data) => {\n      action('label')({\n        id,\n        label,\n        data\n      });\n      return id;\n    }\n  }} />;\n}"},null==(_FormContext$paramete2=FormContext.parameters)||null==(_FormContext$paramete3=_FormContext$paramete2.docs)?void 0:_FormContext$paramete3.source)})}),CountriesWithStates.parameters=Object.assign({},CountriesWithStates.parameters,{docs:Object.assign({},null==(_CountriesWithStates$=CountriesWithStates.parameters)?void 0:_CountriesWithStates$.docs,{source:Object.assign({originalSource:"(props: FormProps) => {\n  const [data, setData] = React.useState({});\n  const [countries, setCountries] = React.useState({});\n\n  /**\n   * fetch countries\n   */\n  React.useEffect(() => {\n    delay(() => {\n      setCountries(countriesResponse);\n    }, 1000);\n  }, []);\n  const schema = React.useMemo(() => {\n    const newSchema = cloneDeep(props.schema);\n    set(newSchema, 'properties.country.enum', map(countries, 'code'));\n    set(newSchema, 'properties.country.enumNames', map(countries, 'name'));\n    if (data.country) {\n      const {\n        states\n      } = find(countries, {\n        code: data.country\n      });\n      if (states && states.length > 0) {\n        set(newSchema, 'properties.state.enum', map(states, 'code'));\n        set(newSchema, 'properties.state.enumNames', map(states, 'name'));\n      }\n    }\n    return newSchema;\n  }, [props.schema, countries, data.country]);\n  const handleChange = React.useCallback(change => {\n    action('onChange')(change);\n    setData(change);\n  }, []);\n  return <Form<typeof data> {...props} schema={schema} formData={data} onChange={handleChange} />;\n}"},null==(_CountriesWithStates$2=CountriesWithStates.parameters)||null==(_CountriesWithStates$3=_CountriesWithStates$2.docs)?void 0:_CountriesWithStates$3.source)})});try{BasicUsage.displayName="BasicUsage",BasicUsage.__docgenInfo={description:"",displayName:"BasicUsage",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/form.stories.tsx#BasicUsage"]={docgenInfo:BasicUsage.__docgenInfo,name:"BasicUsage",path:"src/form.stories.tsx#BasicUsage"})}catch(__react_docgen_typescript_loader_error){}try{Nested.displayName="Nested",Nested.__docgenInfo={description:"",displayName:"Nested",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/form.stories.tsx#Nested"]={docgenInfo:Nested.__docgenInfo,name:"Nested",path:"src/form.stories.tsx#Nested"})}catch(__react_docgen_typescript_loader_error){}try{Arrays.displayName="Arrays",Arrays.__docgenInfo={description:"",displayName:"Arrays",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/form.stories.tsx#Arrays"]={docgenInfo:Arrays.__docgenInfo,name:"Arrays",path:"src/form.stories.tsx#Arrays"})}catch(__react_docgen_typescript_loader_error){}try{Numbers.displayName="Numbers",Numbers.__docgenInfo={description:"",displayName:"Numbers",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/form.stories.tsx#Numbers"]={docgenInfo:Numbers.__docgenInfo,name:"Numbers",path:"src/form.stories.tsx#Numbers"})}catch(__react_docgen_typescript_loader_error){}try{Widgets.displayName="Widgets",Widgets.__docgenInfo={description:"",displayName:"Widgets",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/form.stories.tsx#Widgets"]={docgenInfo:Widgets.__docgenInfo,name:"Widgets",path:"src/form.stories.tsx#Widgets"})}catch(__react_docgen_typescript_loader_error){}try{Ordering.displayName="Ordering",Ordering.__docgenInfo={description:"",displayName:"Ordering",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/form.stories.tsx#Ordering"]={docgenInfo:Ordering.__docgenInfo,name:"Ordering",path:"src/form.stories.tsx#Ordering"})}catch(__react_docgen_typescript_loader_error){}try{Errors.displayName="Errors",Errors.__docgenInfo={description:"",displayName:"Errors",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/form.stories.tsx#Errors"]={docgenInfo:Errors.__docgenInfo,name:"Errors",path:"src/form.stories.tsx#Errors"})}catch(__react_docgen_typescript_loader_error){}try{ErrorSchema.displayName="ErrorSchema",ErrorSchema.__docgenInfo={description:"",displayName:"ErrorSchema",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/form.stories.tsx#ErrorSchema"]={docgenInfo:ErrorSchema.__docgenInfo,name:"ErrorSchema",path:"src/form.stories.tsx#ErrorSchema"})}catch(__react_docgen_typescript_loader_error){}try{Single.displayName="Single",Single.__docgenInfo={description:"",displayName:"Single",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/form.stories.tsx#Single"]={docgenInfo:Single.__docgenInfo,name:"Single",path:"src/form.stories.tsx#Single"})}catch(__react_docgen_typescript_loader_error){}try{Collapsible.displayName="Collapsible",Collapsible.__docgenInfo={description:"",displayName:"Collapsible",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/form.stories.tsx#Collapsible"]={docgenInfo:Collapsible.__docgenInfo,name:"Collapsible",path:"src/form.stories.tsx#Collapsible"})}catch(__react_docgen_typescript_loader_error){}try{FormContext.displayName="FormContext",FormContext.__docgenInfo={description:"",displayName:"FormContext",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/form.stories.tsx#FormContext"]={docgenInfo:FormContext.__docgenInfo,name:"FormContext",path:"src/form.stories.tsx#FormContext"})}catch(__react_docgen_typescript_loader_error){}try{CountriesWithStates.displayName="CountriesWithStates",CountriesWithStates.__docgenInfo={description:"",displayName:"CountriesWithStates",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/form.stories.tsx#CountriesWithStates"]={docgenInfo:CountriesWithStates.__docgenInfo,name:"CountriesWithStates",path:"src/form.stories.tsx#CountriesWithStates"})}catch(__react_docgen_typescript_loader_error){}}}]);