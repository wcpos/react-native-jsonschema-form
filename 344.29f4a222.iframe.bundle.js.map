{"version":3,"file":"344.29f4a222.iframe.bundle.js","mappings":";AAWA;AACA;;;AAGA;;AAIA;AACA;AAGA;AACA;AACA;AACA;;;AAGA;AAGA;AACA;AACA;AACA;;;AAGA;AAGA;AACA;AACA;AACA;;;AAGA;AAGA;AACA;AACA;AACA;;;;;AC/CA;;;;;AAKA;;ACNA;AAEA;AAEA;AAEA;;AAGA;AAEA;AAEA;AAEA;;AAGA;;AAGA;;AAIA;;AAEA;;AAEA;;AASA;;AASA;;;;;;;;;AAWA;;AAEA;AAEA;AAEA;AAEA;;AAGA;AACA;AACA;AACA;AACA;;;ACtEA;;AAOA;;AAIA;AACA;AACA;;;;;AAMA;AACA;;AAEA;AASA;;AAMA;AAUA;AACA;AAGA;;ACnDA;;AAEA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACPA","sources":["webpack://@wcpos/react-native-jsonschema-form/./node_modules/@wcpos/components/src/arrow/styles.ts","webpack://@wcpos/react-native-jsonschema-form/./node_modules/@wcpos/components/src/backdrop/styles.ts","webpack://@wcpos/react-native-jsonschema-form/./node_modules/@wcpos/components/src/box/styles.ts","webpack://@wcpos/react-native-jsonschema-form/./node_modules/@wcpos/components/src/button/styles.ts","webpack://@wcpos/react-native-jsonschema-form/./node_modules/@wcpos/components/src/popover/styles.ts","webpack://@wcpos/react-native-jsonschema-form/./node_modules/@wcpos/components/src/ripple/styles.ts"],"sourcesContent":["import styled, { css } from 'styled-components/native';\n\ntype ArrowProps = import('./arrow').ArrowProps;\n\nconst sizes = {\n\tsmall: 8,\n\tlarge: 20,\n\tdefault: 12,\n};\n\nexport const Container = styled.View<Pick<ArrowProps, 'direction' | 'size'>>`\n\twidth: ${({ size }) => sizes[size || 'default']}px;\n\theight: ${({ size }) => sizes[size || 'default']}px;\n\n\t/** Hack to get arrow in the right position */\n\t${({ direction }) =>\n\t\tdirection === 'up' &&\n\t\tcss`\n\t\t\tflex-direction: row;\n\t\t`}\n`;\n\nexport const Left = styled.View<Pick<ArrowProps, 'size' | 'color'>>`\n\tborder-top-width: ${({ size }) => sizes[size || 'default'] / 2}px;\n\tborder-bottom-width: ${({ size }) => sizes[size || 'default'] / 2}px;\n\tborder-right-width: ${({ size }) => sizes[size || 'default'] / 2}px;\n\tborder-right-color: ${({ theme, color }) => color || theme.colors.primary};\n\tborder-top-color: transparent;\n\tborder-bottom-color: transparent;\n`;\n\nexport const Right = styled.View<Pick<ArrowProps, 'size' | 'color'>>`\n\tborder-top-width: ${({ size }) => sizes[size || 'default'] / 2}px;\n\tborder-bottom-width: ${({ size }) => sizes[size || 'default'] / 2}px;\n\tborder-left-width: ${({ size }) => sizes[size || 'default'] / 2}px;\n\tborder-left-color: ${({ theme, color }) => color || theme.colors.primary};\n\tborder-top-color: transparent;\n\tborder-bottom-color: transparent;\n`;\n\nexport const Up = styled.View<Pick<ArrowProps, 'size' | 'color'>>`\n\tborder-left-width: ${({ size }) => sizes[size || 'default'] / 2}px;\n\tborder-right-width: ${({ size }) => sizes[size || 'default'] / 2}px;\n\tborder-bottom-width: ${({ size }) => sizes[size || 'default'] / 2}px;\n\tborder-bottom-color: ${({ theme, color }) => color || theme.colors.primary};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n`;\n\nexport const Down = styled.View<Pick<ArrowProps, 'size' | 'color'>>`\n\tborder-left-width: ${({ size }) => sizes[size || 'default'] / 2}px;\n\tborder-right-width: ${({ size }) => sizes[size || 'default'] / 2}px;\n\tborder-top-width: ${({ size }) => sizes[size || 'default'] / 2}px;\n\tborder-top-color: ${({ theme, color }) => color || theme.colors.primary};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n`;\n","import { StyleSheet } from 'react-native';\n\nimport styled from 'styled-components/native';\n\nexport const Backdrop = styled.View`\n\tbackground-color: rgba(0, 0, 0, 0.3);\n\t${{ ...StyleSheet.absoluteFillObject }}\n\tflex: 1;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tz-index: ${({ theme }) => theme.zIndex.backdrop};\n`;\n","import styled, { css } from 'styled-components/native';\n\ntype BoxProps = import('./box').BoxProps;\n\nexport const Box = styled.View<BoxProps>`\n\tpadding-top: ${({ theme, paddingTop, paddingY, _padding }) =>\n\t\t`${theme.spacing[paddingTop || paddingY || _padding || 'none']}px`};\n\tpadding-bottom: ${({ theme, paddingBottom, paddingY, _padding }) =>\n\t\t`${theme.spacing[paddingBottom || paddingY || _padding || 'none']}px`};\n\tpadding-left: ${({ theme, paddingLeft, paddingX, _padding }) =>\n\t\t`${theme.spacing[paddingLeft || paddingX || _padding || 'none']}px`};\n\tpadding-right: ${({ theme, paddingRight, paddingX, _padding }) =>\n\t\t`${theme.spacing[paddingRight || paddingX || _padding || 'none']}px`};\n\n\tmargin-top: ${({ theme, marginTop, marginY, _margin }) =>\n\t\t`${theme.spacing[marginTop || marginY || _margin || 'none']}px`};\n\tmargin-bottom: ${({ theme, marginBottom, marginY, _margin }) =>\n\t\t`${theme.spacing[marginBottom || marginY || _margin || 'none']}px`};\n\tmargin-left: ${({ theme, marginLeft, marginX, _margin }) =>\n\t\t`${theme.spacing[marginLeft || marginX || _margin || 'none']}px`};\n\tmargin-right: ${({ theme, marginRight, marginX, _margin }) =>\n\t\t`${theme.spacing[marginRight || marginX || _margin || 'none']}px`};\n\n\tflex-direction: ${({ reverse, horizontal }) =>\n\t\treverse ? (horizontal ? 'row-reverse' : 'column-reverse') : horizontal ? 'row' : 'column'};\n\n\t${({ fill }) =>\n\t\tfill &&\n\t\tcss`\n\t\t\tflex: 1;\n\t\t`}\n\n\tgap: ${({ theme, space }) => `${theme.spacing[space]}px`};\n\n\tjustify-content: ${({ distribution }) =>\n\t\tdistribution === 'start'\n\t\t\t? 'flex-start'\n\t\t\t: distribution === 'end'\n\t\t\t\t? 'flex-end'\n\t\t\t\t: distribution === 'center'\n\t\t\t\t\t? 'center'\n\t\t\t\t\t: 'space-between'};\n\n\talign-items: ${({ align }) =>\n\t\talign === 'fill'\n\t\t\t? 'stretch'\n\t\t\t: align === 'start'\n\t\t\t\t? 'flex-start'\n\t\t\t\t: align === 'end'\n\t\t\t\t\t? 'flex-end'\n\t\t\t\t\t: 'center'};\n\n\t${({ raised }) =>\n\t\traised &&\n\t\tcss`\n\t\t\tshadow-offset: {\n\t\t\t\twidth: 0;\n\t\t\t\theight: 1;\n\t\t\t}\n\t\t\tshadow-opacity: 0.22;\n\t\t\tshadow-radius: 7.5px;\n\t\t\tshadow-color: #000;\n\t\t\televation: 5;\n\t\t`}\n\n\tborder-top-left-radius: ${({ theme, roundingTopLeft, rounding }) =>\n\t\t`${theme.rounding[roundingTopLeft || rounding || 'none']}px`};\n\tborder-top-right-radius: ${({ theme, roundingTopRight, rounding }) =>\n\t\t`${theme.rounding[roundingTopRight || rounding || 'none']}px`};\n\tborder-bottom-right-radius: ${({ theme, roundingBottomRight, rounding }) =>\n\t\t`${theme.rounding[roundingBottomRight || rounding || 'none']}px`};\n\tborder-bottom-left-radius: ${({ theme, roundingBottomLeft, rounding }) =>\n\t\t`${theme.rounding[roundingBottomLeft || rounding || 'none']}px`};\n\n\tborder-top-width: ${({ borderTop, border }) => (borderTop || border ? 1 : 0)}px;\n\tborder-right-width: ${({ borderRight, border }) => (borderRight || border ? 1 : 0)}px;\n\tborder-bottom-width: ${({ borderBottom, border }) => (borderBottom || border ? 1 : 0)}px;\n\tborder-left-width: ${({ borderLeft, border }) => (borderLeft || border ? 1 : 0)}px;\n\tborder-color: ${({ theme, border, borderTop, borderRight, borderBottom, borderLeft }) =>\n\t\ttheme.colors[border || borderTop || borderRight || borderBottom || borderLeft] ||\n\t\ttheme.colors.border};\n\tborder-style: solid;\n`;\n","import { StyleSheet } from 'react-native';\n\nimport styled from 'styled-components/native';\n\ntype ButtonProps = import('./button').Props;\ntype BackgroundProps = Pick<ButtonProps, 'background' | 'type' | 'disabled' | 'size' | 'fill'>;\n\nexport const Background = styled.View<BackgroundProps>`\n\tbackground-color: ${({ background, type, theme }) => {\n\t\tif (background === 'clear' || background === 'outline') {\n\t\t\treturn 'transparent';\n\t\t}\n\t\treturn type ? theme.colors[type] : theme.colors.primary;\n\t}};\n\n\tborder-color: ${({ type, theme }) => {\n\t\treturn type ? theme.colors[type] : theme.colors.primary;\n\t}};\n\n\topacity: ${({ disabled }) => (disabled ? 0.75 : 1)};\n\tborder-radius: ${({ theme }) => `${theme.rounding.medium}px`};\n\tborder-width: ${({ background }) =>\n\t\tbackground === 'outline' ? `${StyleSheet.hairlineWidth}px` : 0};\n\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-grow: ${({ fill }) => (fill ? 1 : 0)};\n\theight: ${({ fill }) => (fill ? '100%' : 'auto')};\n\n\tpadding: ${({ size, theme }) => {\n\t\tif (size === 'small') {\n\t\t\treturn `${theme.spacing.xxSmall}px ${theme.spacing.small}px`;\n\t\t}\n\t\tif (size === 'large') {\n\t\t\treturn `${theme.spacing.small}px ${theme.spacing.large}px`;\n\t\t}\n\t\treturn `${theme.spacing.xSmall}px ${theme.spacing.medium}px`;\n\t}};\n`;\n\ntype ButtonGroupProps = import('./group').ButtonGroupProps;\n\nexport const Group = styled.View<ButtonGroupProps>`\n\tflex-direction: row;\n\tjustify-content: ${({ alignment }) => {\n\t\tswitch (alignment) {\n\t\t\tcase 'start':\n\t\t\t\treturn 'flex-start';\n\t\t\tcase 'end':\n\t\t\t\treturn 'flex-end';\n\t\t\tdefault:\n\t\t\t\treturn 'center';\n\t\t}\n\t}};\n\twidth: ${({ fill }) => (fill ? '100%' : 'auto')};\n`;\n\nexport const GroupChild = styled.View<ButtonGroupProps & { last: boolean }>`\n\tmargin-end: ${({ last, theme }) => (last ? '0' : theme.spacing.small)};\n`;\n","import styled from 'styled-components/native';\n\n// export const AnimatedTriggerDuplicate = styled.View`\n// \tposition: absolute;\n// \tz-index: ${({ theme }) => theme.POPOVER_Z_INDEX};\n// `;\n\nexport const Container = styled.View`\n\tz-index: ${({ theme }) => theme.zIndex.popover};\n\tposition: absolute;\n`;\n\nexport const Popover = styled.View`\n\tbackground-color: ${({ theme }) => theme.colors.inputBackground};\n\tpadding: ${({ theme }) => theme.spacing.xSmall}px;\n\tborder-radius: ${({ theme }) => theme.rounding.small}px;\n`;\n\nexport const RaisedBox = styled.View`\n\tshadow-offset: {\n\t\twidth: 0;\n\t\theight: 1;\n\t}\n\tshadow-opacity: 0.22;\n\tshadow-radius: 7.5px;\n\tshadow-color: #000;\n\televation: 5;\n`;\n","import styled from 'styled-components/native';\n\nexport const RippleEffect = styled.View`\n\tz-index: -1;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tborder-radius: ${({ theme }) => `${theme.rounding.circle}px`};\n\tbackground-color: rgba(0, 0, 0, 0.1);\n`;\n"],"names":[],"sourceRoot":""}